#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================


#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression "Installing Python dependencies..."

mkdir -p "$data_dir/media"
mkdir -p "$install_dir/static"

pushd "$install_dir"/
    ynh_exec_as_app python3 -m venv "$install_dir/venv"
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/pip" install --upgrade pip
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/pip" install .

    set -o allexport; source "$install_dir"/.env; set +o allexport
    ynh_hide_warnings corepack enable
    ynh_hide_warnings npm install -g corepack@latest
    ynh_hide_warnings ynh_exec_as_app corepack prepare yarn@4 --activate
    ynh_hide_warnings ynh_exec_as_app CYPRESS_INSTALL_BINARY=0 NODE_OPTIONS="--max-old-space-size=3000" npm install sass

    sed -i "s|^STATIC_ROOT = ''|STATIC_ROOT = os.environ.get('DJANGO_STATIC_ROOT', '/home/wger/static')|" /var/www/wger/wger/settings.py
    sed -i "s|^MEDIA_ROOT = ''|MEDIA_ROOT = os.environ.get('DJANGO_MEDIA_ROOT', '/home/wger/media')|" /var/www/wger/wger/settings.py
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/wger" bootstrap
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/python" manage.py collectstatic --noinput --verbosity 2
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/python" manage.py migrate --all


	echo "from django.contrib.sites.models import Site; site = Site.objects.get(pk=1); site.domain = '$domain'; site.name = '$domain wger Workout Manager'; site.save()" | ynh_hide_warnings "$install_dir/venv/bin/python" "$install_dir/manage.py" shell
	echo "yes"
 
    ynh_safe_rm "$install_dir/.cache/pip"
popd

ynh_config_add_logrotate
touch /var/log/$app/$app.log

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add "$app" --description="$app service" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

# Create a dedicated Fail2Ban config
#ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
